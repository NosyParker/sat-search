# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2

jobs:
  checkout_code:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - save_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
          paths:
            - ~/circleci

  install_dependencies:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.6.1
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha      
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/circleci
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.6.1
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            nosetests -v --with-coverage --cover-package satsearch

  deploy:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.6.1
    steps:
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            pip install twine
            python setup.py dist
            twine upload --username "${PYPI_USER}" --password "${PYPI_PASS}" dist


workflows:
  version: 2
  build_test_deploy:
    jobs:
      - checkout_code
      - install_dependencies:
          requires: checkout_code
      - test:
          requires: install_dependencies
          filters:
            branch:
              only: develop
            tags:
              only: /.*/
      - deploy:
          requires: test
          filters:
            tags:
              only: /^[0-9]\.[0-9]\.[0-9]/
